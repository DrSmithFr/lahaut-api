security:
    password_hashers:
        harsh:
            algorithm: auto
            memory_cost: 4092
            time_cost: 10
    providers:
        users:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/login$
            stateless: true
            json_login:
                check_path: /login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        documentation:
            pattern: ^/documentation$
            security: false
        documentation_json:
            pattern:  ^/documentation.json$
            security: false
        register:
            pattern: ^/register/
            security: false
        reset_password:
            pattern:  ^/reset_password
            security: false
        public_media:
            pattern: ^/media/
            security: false
        main:
            stateless: true
            provider: users
            jwt: ~

    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset_password$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/medias/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/,       roles: [ IS_AUTHENTICATED_FULLY, ROLE_USER ] }

    role_hierarchy:
        ROLE_CUSTOMER: [ ROLE_USER ]
        ROLE_MONITOR: [ ROLE_USER ]
        ROLE_ADMIN: [ ROLE_USER, ROLE_MONITOR ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
